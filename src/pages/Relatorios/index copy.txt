import React from 'react';
import {
    makeStyles
} from '@material-ui/core/styles';
import Table from '@material-ui/core/Table';
import TableBody from '@material-ui/core/TableBody';
import TableCell from '@material-ui/core/TableCell';
import TableContainer from '@material-ui/core/TableContainer';
import TableHead from '@material-ui/core/TableHead';
import TableRow from '@material-ui/core/TableRow';
import Paper from '@material-ui/core/Paper';
import axios from "axios";
import Cookies, { get } from 'js-cookie'

import api from "../../services/api";


const useStyles = makeStyles({
    table: {
        minWidth: 650,
    },
});

function createData(name, calories, fat, carbs, protein) {
    return {
        name,
        calories,
        fat,
        carbs,
        protein
    };
}

const getTokenAPI = localStorage.getItem("portal2")

async function tabelajson() {
    try {
//        console.log("try:")
        const tokenapi = Cookies.get("portal")
//        console.log(getTokenAPI)
        api.defaults.headers.authorization = `Bearer ${getTokenAPI}`;


        const responser = await axios.post("http://187.94.62.84:4322/REST/TELEGRAM/TeleJson?cQuery=select top 10 * from CN9010")
        //console.log(responser)

        return responser.data
        //console.log(response)
    } catch (err) {
        console.log('erro no post')
    }
}


const array = []
const subarray = []

async function clinhas() {
  
  
  if (getTokenAPI != null) {
  const linha2 = await tabelajson()
    
  const objarray = Object.values(linha2)
  const objarray2 = objarray[0]
    for (var item in objarray2) {
     const objarray3 = Object.values(objarray2[item])
        console.log(objarray3)
        subarray.push(objarray3)     

        
    }
    
    //console.log('array')
    console.log(subarray)
    return subarray
  }
}
if (getTokenAPI != null) {
const array2 = clinhas()
console.log('array2')
console.log(array2)
}
 const rows = clinhas()
 
//const rows = clinhas()
export default async function DenseTable() {
  const classes = useStyles();
  
  return (
    <TableContainer component={Paper}>
      <Table className={classes.table} size="small" aria-label="a dense table">
        <TableHead>
          <TableRow>
            <TableCell>Dessert (100g serving)</TableCell>
            <TableCell align="right">Calories</TableCell>
            <TableCell align="right">Fat&nbsp;(g)</TableCell>
            <TableCell align="right">Carbs&nbsp;(g)</TableCell>
            <TableCell align="right">Protein&nbsp;(g)</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {rows.map((select) => (
            <TableRow key={select.name}>
              <TableCell component="th" scope="row">
                {select.name}
              </TableCell>
              <TableCell align="right">{select.calories}</TableCell>
              <TableCell align="right">{select.fat}</TableCell>
              <TableCell align="right">{select.carbs}</TableCell>
              <TableCell align="right">{select.protein}</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </TableContainer>
  );
}